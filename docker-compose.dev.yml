services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: always
    env_file:
      - "development.env"
    volumes:
      - ./backend/routers:/code/routers
      - ./backend/public:/code/public
      - ./backend/main.py:/code/main.py
    networks:
      - staging
    ports:
      - 8000:8000
    depends_on:
      - database
      - cache
      - search
  cache:
    container_name: cache
    build:
      context: ./backend/cache
      dockerfile: Dockerfile
    restart: always
    networks:
      - staging
    ports:
      - 6379:6379
    # volumes:
    #   - ./backend/cache/cache_db:/data
  database:
    container_name: database
    build:
      context: ./backend/database
      dockerfile: Dockerfile
    volumes:
      - ./backend/database/main_db:/data/db
    restart: always
    networks:
      - staging
    ports:
      - 27017:27017
  search:
    container_name: search
    build:
      context: ./backend/search
      dockerfile: Dockerfile
    volumes:
      - ./backend/search/search_db:/meili_data
    restart: always
    networks:
      - staging
    ports:
      - 7700:7700

  # proxy:
  #   container_name: proxy
  #   image: jc21/nginx-proxy-manager:latest
  #   restart: unless-stopped
  #   ports:
  #     - 81:81
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./proxy/data:/data
  #     - ./proxy/letsencrypt:/etc/letsencrypt
  #   networks:
  #     - staging

networks:
  staging:
    driver: bridge
