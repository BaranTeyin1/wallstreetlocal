services:
  # backend:
  #   container_name: backend
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.dev
  #   restart: always
  #   environment:
  #     - FINN_HUB_API_KEY=${FINN_HUB_API_KEY}
  #     - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}

  #     - MONGO_SERVER_URL=${MONGO_SERVER_URL}
  #     - MONGO_BACKUP_URL=${MONGO_BACKUP_URL}

  #     - REDIS_SERVER_URL=${REDIS_SERVER_URL}

  #     - MEILISEARCH_SERVER_URL=${MEILISEARCH_SERVER_URL}
  #     - MEILISEARCH_MASTER_KEY=${MEILISEARCH_MASTER_KEY}
  #   volumes:
  #     - ./backend/routers:/code/routers
  #   networks:
  #     - staging
  #   ports:
  #     - 8000:8000
  #   depends_on:
  #     - database
  #     - cache
  #     - search
  cache:
    container_name: cache
    build:
      context: ./backend/cache
      dockerfile: Dockerfile
    restart: always
    networks:
      - staging
    ports:
      - 6379:6379
    volumes:
      - ./backend/public/backup:/public/backup
  database:
    container_name: database
    build:
      context: ./backend/database
      dockerfile: Dockerfile
    volumes:
      - ./backend/database/data.mongo:/data/db
    restart: always
    logging:
      driver: "none"
    networks:
      - staging
    ports:
      - 27017:27017
  search:
    container_name: search
    build:
      context: ./backend/search
      dockerfile: Dockerfile
    volumes:
      - ./backend/search/data.ms:/data/data.ms
    restart: always
    networks:
      - staging
    ports:
      - 7700:7700

  proxy:
    container_name: proxy
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - 81:81
      - 80:80
      - 443:443
    volumes:
      - ./proxy/data:/data
      - ./proxy/letsencrypt:/etc/letsencrypt
    networks:
      - staging

networks:
  staging:
    driver: bridge
